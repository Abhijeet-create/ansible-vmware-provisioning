---

- hosts: all
  gather_facts: false
  connection: local

  tasks:
  - name: "INCLUDES | Include vaulted credentials"
    include_vars: group_vars/vaulted.yml
    no_log: true

  - name: "PROVISION | Create VM from template"
    vmware_guest:
      validate_certs: "{{ validate_certs }}"
      hostname: "{{ vcenter_host }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ datacenter }}"
      name: "{{ name }}"
      folder: "{{ folder }}"
      template: "{{ vmtemplate }}"
      state: poweredon
      annotation: '{{ vmnotes|default("Nothing significant to report") }}'
      esxi_hostname: "{{ esxi_host }}"
      hardware:
        num_cpus: "{{ cpu }}"
        memory_mb: "{{ mem_mb }}"
      disk:
        - size_gb: "{{ disk }}"
          type: thin
          datastore: "{{ datastore }}"
      networks:
        - name: "{{ port_grp }}"
      wait_for_ip_address: yes
    delegate_to: localhost
    register: new_vm

  - name: "NETWORK | Change the IP address"
    local_action:
      module: vmware_vm_shell
      validate_certs: "{{ validate_certs }}"
      hostname: "{{ vcenter_host }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ datacenter }}"
      vm_id: "{{ name }}"
      vm_username: root
      vm_password: "{{ rooter }}"
      vm_shell: "{{ item.cmd }}"
      vm_shell_args: "{{ item.args }}"
    with_items:
      - { cmd: /bin/sed, args: " -i 's/192.168.1.180/{{ server_ip }}/' /etc/sysconfig/network-scripts/ifcfg-ens192" }
      - { cmd: /bin/systemctl, args: " restart network" }
    when: name != "t-centos7"

  - name: "REBOOT | Reboot to ensure network settings take effect"
    local_action:
      module: vmware_vm_shell
      validate_certs: "{{ validate_certs }}"
      hostname: "{{ vcenter_host }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ datacenter }}"
      vm_id: "{{ name }}"
      vm_username: root
      vm_password: "{{ rooter }}"
      vm_shell: /sbin/shutdown
      vm_shell_args: " -r now" 

  - name: "REBOOT | Wait for server to come back"
    local_action: 
      module: wait_for
      host: "{{ server_ip }}"
      port: 22
      state: started
      delay: 30
      timeout: 300
    # when: name != "t-centos7"

- hosts: all
  gather_facts: true
  connection: smart
  become: true

  # roles:
  #   - role: common

- include: disk_resize.yml
  when: disk > 10
